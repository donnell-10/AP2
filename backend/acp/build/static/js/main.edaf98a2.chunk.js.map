{"version":3,"sources":["pages/home.js","actions/auth.js","actions/types.js","pages/login.js","pages/register.js","pages/activate.js","pages/resetPassword.js","pages/resetPasswordConfirm.js","components/Navbar.js","hocs/layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","React","createElement","className","Link","role","to","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","load_user","_ref2","_asyncToGenerator","_callee2","dispatch","config","res","_context2","localStorage","getItem","headers","Content-Type","Authorization","concat","Accept","axios","get","process","payload","data","t0","_x2","apply","arguments","connect","isAuthenticated","auth","login","email","password","_ref3","_callee3","body","_context3","JSON","stringify","post","alert","_x3","_ref","_useState","useState","_useState2","_slicedToArray","formData","setFormData","onChange","e","_objectSpread","_defineProperty","target","Navigate","onSubmit","preventDefault","placeholder","required","minLength","Register","Activate","reset_password","_ref4","_callee4","_context4","_x4","requestSent","setRequestSent","_useState3","_useState4","reset_password_confirm","uid","token","new_password","re_new_password","_ref5","_callee5","_context5","_x5","match","params","logout","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","onClick","Fragment","checkAuthenticated","_callee","_context","code","_x","props","useEffect","Navbar","children","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Provider","Router","Layout","Routes","Route","path","element","Login","ResetPassword","ResetPasswordConfirm","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"uLAoBeA,EAhBF,WAAH,OACNC,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAY,kBACbF,IAAAC,cAAA,MAAIC,UAAU,aAAY,gBAC1BF,IAAAC,cAAA,KAAGC,UAAY,QAAO,gEACtBF,IAAAC,cAAA,MAAIC,UAAY,SAChBF,IAAAC,cAAA,SAAG,mCACHD,IAAAC,cAACE,IAAI,CAACD,UAAU,yBAAyBE,KAAK,UAAS,sBAG3DJ,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAACE,IAAI,CAACD,UAAW,yBAAyBG,GAAG,SAASD,KAAK,UAAS,sECdhFE,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAkBO,IAqCM6I,EAAY,WAAH,sBAAAC,EAAAC,YAAAhJ,IAAA+G,KAAS,SAAAkC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAApJ,IAAAyB,KAAA,SAAA4H,GAAA,cAAAA,EAAAzB,KAAAyB,EAAA/D,MAAA,WACrCgE,aAAaC,QAAQ,UAAS,CAAAF,EAAA/D,KAAA,SAO7B,OANK6D,EAAS,CACXK,QAAS,CACLC,eAAgB,mBAChBC,cAAe,UAAAC,OAAYL,aAAaC,QAAQ,WAChDK,OAAU,qBAEjBP,EAAAzB,KAAA,EAAAyB,EAAA/D,KAAA,EAGqBuE,IAAMC,IAAG,GAAAH,OAAII,wBAA6B,oBAAoBZ,GAAO,OAAjFC,EAAGC,EAAA1E,KAETuE,EAAS,CACL1G,KChEmB,sBDiEnBwH,QAASZ,EAAIa,OACdZ,EAAA/D,KAAA,gBAAA+D,EAAAzB,KAAA,EAAAyB,EAAAa,GAAAb,EAAA,SAEHH,EAAS,CACL1G,KCpEgB,qBDqEjB,QAAA6G,EAAA/D,KAAA,iBAGP4D,EAAS,CACL1G,KCzEoB,qBD0ErB,yBAAA6G,EAAAtB,SAAAkB,EAAA,iBAEV,gBAAAkB,GAAA,OAAApB,EAAAqB,MAAAtH,KAAAuH,YA3BqB,IEWPC,cAJS,SAAAjG,GAAK,MAAK,CAC9BkG,gBAAiBlG,EAAMmG,KAAKD,kBAGQ,CAACE,MFoBpB,SAACC,EAAOC,GAAQ,sBAAAC,EAAA5B,YAAAhJ,IAAA+G,KAAK,SAAA8D,EAAM3B,GAAQ,IAAAC,EAAA2B,EAAA1B,EAAA,OAAApJ,IAAAyB,KAAA,SAAAsJ,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAzF,MAAA,OASJ,OAP1C6D,EAAS,CACXK,QAAS,CACLC,eAAgB,qBAKlBqB,EAAOE,KAAKC,UAAU,CAAEP,QAAOC,aAAWI,EAAAnD,KAAA,EAAAmD,EAAAzF,KAAA,EAG1BuE,IAAMqB,KAAI,GAAAvB,OAAII,wBAA6B,qBAAqBe,EAAM3B,GAAO,OAAzFC,EAAG2B,EAAApG,KAETuE,EAAS,CACL1G,KCtGiB,gBDuGjBwH,QAASZ,EAAIa,OAGjBf,EAASJ,KAAaiC,EAAAzF,KAAA,iBAAAyF,EAAAnD,KAAA,GAAAmD,EAAAb,GAAAa,EAAA,SAEtBI,MAAM,4BACNjC,EAAS,CACL1G,KC7Gc,eD8Gf,yBAAAuI,EAAAhD,SAAA8C,EAAA,kBAEV,gBAAAO,GAAA,OAAAR,EAAAR,MAAAtH,KAAAuH,YA1BoC,KEpBtBC,CA9DD,SAAHe,GAAiC,IAA5BZ,EAAKY,EAALZ,MAAOF,EAAec,EAAfd,gBAAee,EACFC,mBAAS,CACrCb,MAAO,GACPC,SAAU,KACZa,EAAAC,YAAAH,EAAA,GAHKI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAKrBd,EAAmBgB,EAAnBhB,MAAOC,EAAYe,EAAZf,SAERiB,EAAW,SAAAC,GAAC,OAAIF,EAAWG,YAAA,GAAMJ,EAAQK,YAAA,GAAGF,EAAEG,OAAOlF,KAAO+E,EAAEG,OAAOrL,UAQ3E,OAAI4J,EACO7K,IAAAC,cAACsM,IAAQ,CAAClM,GAAG,MAIpBL,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,SAAG,0BACHD,IAAAC,cAAA,QAAMuM,SAAU,SAAAL,GAAC,OAdR,SAAAA,GACbA,EAAEM,iBAEF1B,EAAMC,EAAOC,GAWWuB,CAASL,KACzBnM,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,SACIC,UAAY,eACZ4C,KAAO,QACP4J,YAAY,QACZtF,KAAO,QACPnG,MAAQ+J,EACRkB,SAAY,SAAAC,GAAC,OAAID,EAASC,IAC1BQ,UAAQ,IAEZ3M,IAAAC,cAAA,SACIC,UAAY,eACZ4C,KAAO,WACP4J,YAAY,WACZtF,KAAO,WACPnG,MAAQgK,EACRiB,SAAY,SAAAC,GAAC,OAAID,EAASC,IAC1BS,UAAY,IACZD,UAAQ,KAGhB3M,IAAAC,cAAA,UAAQC,UAAW,kBAAkB4C,KAAK,UAAS,WAEvD9C,IAAAC,cAAA,KAAGC,UAAY,QAAO,0BACKF,IAAAC,cAACE,IAAI,CAACE,GAAI,aAAY,YAEjDL,IAAAC,cAAA,KAAGC,UAAY,QAAO,yBACIF,IAAAC,cAACE,IAAI,CAACE,GAAG,mBAAkB,qBChDlDwM,EANE,WAAH,OACV7M,IAAAC,cAAA,WAAK,aCKM6M,EANE,WAAH,OACV9M,IAAAC,cAAA,WAAK,aC8CM2K,cAAQ,KAAM,CAACmC,eLiEA,SAAC/B,GAAK,sBAAAgC,EAAA1D,YAAAhJ,IAAA+G,KAAK,SAAA4F,EAAMzD,GAAQ,IAAAC,EAAA2B,EAAA,OAAA9K,IAAAyB,KAAA,SAAAmL,GAAA,cAAAA,EAAAhF,KAAAgF,EAAAtH,MAAA,OAOb,OANhC6D,EAAS,CACXK,QAAS,CACLC,eAAgB,qBAIlBqB,EAAOE,KAAKC,UAAU,CAAEP,UAAQkC,EAAAhF,KAAA,EAAAgF,EAAAtH,KAAA,EAG5BuE,IAAMqB,KAAI,GAAAvB,OAAII,wBAA6B,+BAA+Be,EAAM3B,GAAO,OAE7FD,EAAS,CACL1G,KCtH0B,2BDuH3BoK,EAAAtH,KAAA,gBAAAsH,EAAAhF,KAAA,EAAAgF,EAAA1C,GAAA0C,EAAA,SAEH1D,EAAS,CACL1G,KCzHuB,wBD0HxB,yBAAAoK,EAAA7E,SAAA4E,EAAA,iBAEV,gBAAAE,GAAA,OAAAH,EAAAtC,MAAAtH,KAAAuH,YApBmC,KKjErBC,CA7CO,SAAHe,GAAyB,IAApBoB,EAAcpB,EAAdoB,eAAcnB,EACIC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CwB,EAAWtB,EAAA,GAAEuB,EAAcvB,EAAA,GAAAwB,EACFzB,mBAAS,CACrCb,MAAO,KACTuC,EAAAxB,YAAAuB,EAAA,GAFKtB,EAAQuB,EAAA,GAAEtB,EAAWsB,EAAA,GAIrBvC,EAASgB,EAAThB,MAWP,OAAIoC,EACOpN,IAAAC,cAACsM,IAAQ,CAAClM,GAAG,MAIpBL,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,QAAMuM,SAAU,SAAAL,GAAC,OAdR,SAAAA,GACbA,EAAEM,iBAEFM,EAAe/B,GACfqC,GAAe,GAUSb,CAASL,KACzBnM,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,SACIC,UAAY,eACZ4C,KAAO,QACP4J,YAAY,QACZtF,KAAO,QACPnG,MAAQ+J,EACRkB,SAAY,SAAAC,GAAC,OAxBhB,SAAAA,GAAC,OAAIF,EAAWG,YAAA,GAAMJ,EAAQK,YAAA,GAAGF,EAAEG,OAAOlF,KAAO+E,EAAEG,OAAOrL,SAwBtCiL,CAASC,IAC1BQ,UAAQ,KAIhB3M,IAAAC,cAAA,UAAQC,UAAW,kBAAkB4C,KAAK,UAAS,8BCqBpD8H,cAAQ,KAAM,CAAC4C,uBN0EQ,SAACC,EAAKC,EAAOC,EAAcC,GAAe,sBAAAC,EAAAvE,YAAAhJ,IAAA+G,KAAK,SAAAyG,EAAMtE,GAAQ,IAAAC,EAAA2B,EAAA,OAAA9K,IAAAyB,KAAA,SAAAgM,GAAA,cAAAA,EAAA7F,KAAA6F,EAAAnI,MAAA,OAOrB,OANpE6D,EAAS,CACXK,QAAS,CACLC,eAAgB,qBAIlBqB,EAAOE,KAAKC,UAAU,CAAEkC,MAAKC,QAAOC,eAAcC,oBAAkBG,EAAA7F,KAAA,EAAA6F,EAAAnI,KAAA,EAGhEuE,IAAMqB,KAAI,GAAAvB,OAAII,wBAA6B,uCAAuCe,EAAM3B,GAAO,OAErGD,EAAS,CACL1G,KC1IkC,mCD2InCiL,EAAAnI,KAAA,gBAAAmI,EAAA7F,KAAA,EAAA6F,EAAAvD,GAAAuD,EAAA,SAEHvE,EAAS,CACL1G,KC7I+B,gCD8IhC,yBAAAiL,EAAA1F,SAAAyF,EAAA,iBAEV,gBAAAE,GAAA,OAAAH,EAAAnD,MAAAtH,KAAAuH,YApB+E,KM1EjEC,CA1Dc,SAAHe,GAAwC,IAAnCsC,EAAKtC,EAALsC,MAAOT,EAAsB7B,EAAtB6B,uBAAsB5B,EAClBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CwB,EAAWtB,EAAA,GAAEuB,EAAcvB,EAAA,GAAAwB,EACFzB,mBAAS,CACrC8B,aAAc,GACdC,gBAAiB,KACnBL,EAAAxB,YAAAuB,EAAA,GAHKtB,EAAQuB,EAAA,GAAEtB,EAAWsB,EAAA,GAKrBI,EAAiC3B,EAAjC2B,aAAcC,EAAmB5B,EAAnB4B,gBAEf1B,EAAW,SAAAC,GAAC,OAAIF,EAAWG,YAAA,GAAMJ,EAAQK,YAAA,GAAGF,EAAEG,OAAOlF,KAAO+E,EAAEG,OAAOrL,UAY3E,OAAImM,EACOpN,IAAAC,cAACsM,IAAQ,CAAClM,GAAG,MAIpBL,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,QAAMuM,SAAU,SAAAL,GAAC,OAhBR,SAAAA,GACbA,EAAEM,iBAEF,IAAMgB,EAAMQ,EAAMC,OAAOT,IACnBC,EAAQO,EAAMC,OAAOR,MAE3BF,EAAuBC,EAAKC,EAAOC,EAAcC,GACjDP,GAAe,GASSb,CAASL,KACzBnM,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,SACIC,UAAY,eACZ4C,KAAO,WACP4J,YAAY,eACZtF,KAAO,eACPnG,MAAQ0M,EACRzB,SAAY,SAAAC,GAAC,OAAID,EAASC,IAC1BS,UAAY,IACZD,UAAQ,IAEZ3M,IAAAC,cAAA,SACIC,UAAY,eACZ4C,KAAO,WACP4J,YAAY,uBACZtF,KAAO,kBACPnG,MAAQ2M,EACR1B,SAAY,SAAAC,GAAC,OAAID,EAASC,IAC1BS,UAAY,IACZD,UAAQ,KAGhB3M,IAAAC,cAAA,UAAQC,UAAW,kBAAkB4C,KAAK,UAAS,sBCApD8H,cAJS,SAAAjG,GAAK,MAAK,CAChCkG,gBAAiBlG,EAAMmG,KAAKD,kBAGU,CAACsD,OPmInB,WAAH,OAAS,SAAA3E,GACxBA,EAAS,CACL1G,KC9Kc,cMyCP8H,CAlDA,SAAHe,GAAkC,IAA7BwC,EAAMxC,EAANwC,OAAQtD,EAAec,EAAfd,gBAoBvB,OACE7K,IAAAC,cAAA,OAAKC,UAAU,4CACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAACE,IAAI,CAACD,UAAU,eAAeG,GAAG,KAAI,gBACtCL,IAAAC,cAAA,UAAQC,UAAU,iBACV4C,KAAK,SACLsL,iBAAe,WACfC,iBAAe,aACfC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBACjBxO,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BuO,GAAG,aAC3CzO,IAAAC,cAAA,MAAIC,UAAU,cACZF,IAAAC,cAAA,MAAIC,UAAU,mBACZF,IAAAC,cAACE,IAAI,CAACD,UAAU,YAAYwO,eAAa,OAAOrO,GAAG,KAAI,SAExDwK,EAzBT7K,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,WAAWyO,KAAK,KAAKC,QAAST,GAAQ,WAZnDnO,IAAAC,cAAC4O,WAAQ,KACH7O,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACE,IAAI,CAACD,UAAU,WAAWG,GAAG,UAAS,UAEzCL,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACE,IAAI,CAACD,UAAU,WAAWG,GAAG,aAAY,oBCYzCuK,cAAQ,KAAM,CAACkE,mBRLI,WAAH,sBAAAnD,EAAArC,YAAAhJ,IAAA+G,KAAS,SAAA0H,EAAMvF,GAAQ,IAAAC,EAAA2B,EAAA,OAAA9K,IAAAyB,KAAA,SAAAiN,GAAA,cAAAA,EAAA9G,KAAA8G,EAAApJ,MAAA,WAC9CgE,aAAaC,QAAQ,UAAS,CAAAmF,EAAApJ,KAAA,SAQwC,OAPhE6D,EAAS,CACXK,QAAS,CACLC,eAAgB,mBAChBG,OAAU,qBAIZkB,EAAOE,KAAKC,UAAU,CAAEmC,MAAO9D,aAAaC,QAAQ,YAAYmF,EAAA9G,KAAA,EAAA8G,EAAApJ,KAAA,EAGhDuE,IAAMqB,KAAI,GAAAvB,OAAII,wBAA6B,qBAAqBe,EAAM3B,GAAO,OAEzE,oBAFbuF,EAAA/J,KAEDsF,KAAK0E,KACTzF,EAAS,CACL1G,KC3BiB,0BD8BrB0G,EAAS,CACL1G,KC9Bc,uBDgCrBkM,EAAApJ,KAAA,iBAAAoJ,EAAA9G,KAAA,GAAA8G,EAAAxE,GAAAwE,EAAA,SAEDxF,EAAS,CACL1G,KCnCkB,uBDoCnB,QAAAkM,EAAApJ,KAAA,iBAIP4D,EAAS,CACL1G,KCzCsB,uBD0CvB,yBAAAkM,EAAA3G,SAAA0G,EAAA,kBAEV,gBAAAG,GAAA,OAAAvD,EAAAjB,MAAAtH,KAAAuH,YAlC8B,IQKmBvB,aAAnCwB,CAnBA,SAACuE,GAOZ,OALAC,oBAAU,WACND,EAAML,qBACNK,EAAM/F,aACP,IAGCpJ,IAAAC,cAAA,WACID,IAAAC,cAACoP,EAAM,MACNF,EAAMG,oCCGbC,EAAe,CACjBC,OAAQ5F,aAAaC,QAAQ,UAC7B4F,QAAS7F,aAAaC,QAAQ,WAC9BgB,gBAAiB,KACjB6E,KAAM,MCnBKC,4BAAgB,CAC3B7E,KDqBW,WAAqC,IAA5BnG,EAAKgG,UAAA9D,OAAA,QAAAtB,IAAAoF,UAAA,GAAAA,UAAA,GAAC4E,EAAcK,EAAMjF,UAAA9D,OAAA,EAAA8D,UAAA,QAAApF,EACtCzC,EAAkB8M,EAAlB9M,KAAMwH,EAAYsF,EAAZtF,QAEd,OAAOxH,GACH,IRrB6B,wBQsBzB,OAAAsJ,YAAA,GACOzH,EAAK,CACRkG,iBAAiB,IAEzB,IRlCqB,gBQoCjB,OADAjB,aAAaiG,QAAQ,SAAUvF,EAAQkF,QACvCpD,YAAA,GACOzH,EAAK,CACRkG,iBAAiB,EACjB2E,OAAQlF,EAAQkF,OAChBC,QAASnF,EAAQmF,UAEzB,IRxCwB,mBQyCpB,OAAArD,YAAA,GACOzH,EAAK,CACRkG,iBAAiB,IAEzB,IRzC2B,sBQ0CvB,OAAAuB,YAAA,GACOzH,EAAK,CACR+K,KAAMpF,IAEd,IR3C0B,qBQ4CtB,OAAA8B,YAAA,GACOzH,EAAK,CACRkG,iBAAiB,IAEzB,IRlDwB,mBQmDpB,OAAAuB,YAAA,GACOzH,EAAK,CACR+K,KAAM,OAEd,IR7DkB,aQ8DlB,IR5DqB,gBQ6DrB,IRlDc,SQqDV,OAFA9F,aAAakG,WAAW,UACxBlG,aAAakG,WAAW,WACxB1D,YAAA,GACOzH,EAAK,CACR6K,OAAQ,KACRC,QAAS,KACT5E,iBAAiB,EACjB6E,KAAM,OAEd,IRhE8B,yBQiE9B,IRhE2B,sBQiE3B,IRhEsC,iCQiEtC,IRhEmC,8BQiEnC,IR1E0B,qBQ2E1B,IR1EuB,kBQ2EnB,OAAAtD,YAAA,GACOzH,GAEX,QACI,OAAOA,ME7EboL,EAAa,CAACC,KAQLC,EANDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe3F,WAAA,EAAIqF,KCkB5BO,EAjBF,WAAJ,OACLtQ,IAAAC,cAACsQ,IAAQ,CAACN,MAAQA,GACdjQ,IAAAC,cAACuQ,IAAM,KACHxQ,IAAAC,cAACwQ,EAAM,KACHzQ,IAAAC,cAACyQ,IAAM,KACH1Q,IAAAC,cAAC0Q,IAAK,CAACC,KAAO,IAAIC,QAAS7Q,IAAAC,cAACF,EAAI,QAChCC,IAAAC,cAAC0Q,IAAK,CAACC,KAAO,SAASC,QAAS7Q,IAAAC,cAAC6Q,EAAK,QACtC9Q,IAAAC,cAAC0Q,IAAK,CAACC,KAAO,YAAYC,QAAS7Q,IAAAC,cAAC4M,EAAQ,QAC5C7M,IAAAC,cAAC0Q,IAAK,CAACC,KAAO,kBAAkBC,QAAS7Q,IAAAC,cAAC8Q,EAAa,QACvD/Q,IAAAC,cAAC0Q,IAAK,CAACC,KAAO,sCAAsCC,QAAS7Q,IAAAC,cAAC+Q,EAAoB,QAClFhR,IAAAC,cAAC0Q,IAAK,CAACC,KAAO,wBAAwBC,QAAS7Q,IAAAC,cAAC6M,EAAQ,aClB/DmE,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrR,IAAAC,cAACD,IAAMsR,WAAU,KACftR,IAAAC,cAACqQ,EAAG","file":"static/js/main.edaf98a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Home = () => (\r\n    <div className=\"container\">\r\n        <div className = \"jumbotron mt-5\">\r\n            <h1 className=\"display-4\">AccuPlaylist</h1>\r\n            <p className = \"lead\">Create a playlist based on what is popular in your location!</p>\r\n            <hr className = \"my-4\"/>\r\n            <p>Click Generate Playlist to try!</p>\r\n            <Link className=\"btn btn-primary btn-lg\" role=\"button\">Generate Playlist</Link>\r\n            \r\n        </div>\r\n        <div className=\"container mt-5\">\r\n            <Link className= \"btn btn-primary btn-lg\" to=\"/login\" role=\"button\">Login</Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}//auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    \r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        alert(\"Incorrect login details.\");\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const change_password = (current_password, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ new_password, re_new_password, current_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/set_password/`, body, config);\r\n        \r\n        alert(\"Succesfully changed password!\");\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        alert(\"Unable to change password. Make sure that you enter your current password correctly and that your new password is sufficiently strong.\")\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const LOGOUT = 'LOGOUT';","import React, {useState} from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formData;\r\n    \r\n    const onChange = e => setFormData ({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n    \r\n    if (isAuthenticated) {\r\n        return <Navigate to='/'/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"container mt-5\">\r\n            <h1>Log In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e=> onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className = 'form-control'\r\n                        type = 'email'\r\n                        placeholder=\"Email\"\r\n                        name = 'email'\r\n                        value ={email}\r\n                        onChange = {e => onChange(e)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        className = 'form-control'\r\n                        type = 'password'\r\n                        placeholder=\"Password\"\r\n                        name = 'password'\r\n                        value ={password}\r\n                        onChange = {e => onChange(e)}\r\n                        minLength = '6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className ='btn btn-primary' type='submit'>Log In</button>\r\n            </form>\r\n            <p className = 'mt-3'>\r\n                Don't have an account? <Link to= '/register'>Sign Up</Link>\r\n            </p>\r\n            <p className = 'mt-3'>\r\n                Forgot your password? <Link to='/reset-password'>ResetPassword</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\n\r\n\r\nconst Register = () => (\r\n    <div>\r\n        Register\r\n    </div>\r\n);\r\n\r\nexport default Register;","import React from \"react\";\r\n\r\n\r\nconst Activate = () => (\r\n    <div>\r\n        Activate\r\n    </div>\r\n);\r\n\r\nexport default Activate;","import React, {useState} from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\n\r\nconst ResetPassword = ({reset_password}) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const {email} = formData;\r\n    \r\n    const onChange = e => setFormData ({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n    \r\n    if (requestSent) {\r\n        return <Navigate to='/'/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"container mt-5\">\r\n            <h1>Request Password Reset</h1>\r\n            <form onSubmit={e=> onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className = 'form-control'\r\n                        type = 'email'\r\n                        placeholder=\"Email\"\r\n                        name = 'email'\r\n                        value ={email}\r\n                        onChange = {e => onChange(e)}\r\n                        required\r\n                    />\r\n\r\n                </div>\r\n                <button className ='btn btn-primary' type='submit'>Request Password Reset</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, {reset_password})(ResetPassword);","import React, {useState} from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({match, reset_password_confirm}) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const {new_password, re_new_password} = formData;\r\n    \r\n    const onChange = e => setFormData ({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n    \r\n    if (requestSent) {\r\n        return <Navigate to='/'/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"container mt-5\">\r\n            <form onSubmit={e=> onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className = 'form-control'\r\n                        type = 'password'\r\n                        placeholder=\"New Password\"\r\n                        name = 'new_password'\r\n                        value ={new_password}\r\n                        onChange = {e => onChange(e)}\r\n                        minLength = '6'\r\n                        required\r\n                    />\r\n                    <input\r\n                        className = 'form-control'\r\n                        type = 'password'\r\n                        placeholder=\"Confirm New Password\"\r\n                        name = 're_new_password'\r\n                        value ={re_new_password}\r\n                        onChange = {e => onChange(e)}\r\n                        minLength = '6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className ='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, {reset_password_confirm})(ResetPasswordConfirm);","import React , {Fragment}from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({logout, isAuthenticated}) => {\r\n  const guestLinks = () => (\r\n      <Fragment>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n            </li>\r\n      </Fragment>\r\n  );\r\n\r\n  const authLinks = () => (\r\n    <li className=\"nav-item\">\r\n      <a className=\"nav-link\" href=\"#!\" onClick={logout}>Logout</a>\r\n    </li>\r\n  );\r\n  \r\n\r\n\r\n  return(\r\n    <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">AccuPlaylist</Link>\r\n        <button className=\"navbar-toggler\" \r\n                type=\"button\" \r\n                data-bs-toggle=\"collapse\" \r\n                data-bs-target=\"#navbarNav\" \r\n                aria-controls=\"navbarNav\" \r\n                aria-expanded=\"false\" \r\n                aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            {isAuthenticated ? authLinks(): guestLinks() }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout}) (Navbar);","import React, {useEffect} from \"react\";\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\r\n\r\nconst Layout = (props) => {\r\n    \r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, []);\r\n    \r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//     isAuthenticated: state.auth.isAuthenticated\r\n// });\r\n\r\nexport default connect(null, {checkAuthenticated, load_user}) (Layout);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null \r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\r\nimport Home from './pages/home';\r\nimport Login from './pages/login';\r\nimport Register from './pages/register';\r\nimport Activate from './pages/activate';\r\nimport ResetPassword from './pages/resetPassword';\r\nimport ResetPasswordConfirm from './pages/resetPasswordConfirm';\r\nimport Layout from './hocs/layout';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App =  () => (\r\n    <Provider store ={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Routes>\r\n                    <Route path = '/' element={<Home/>}/>\r\n                    <Route path = '/login' element={<Login/>}/>\r\n                    <Route path = '/register' element={<Register/>}/>\r\n                    <Route path = '/reset-password' element={<ResetPassword/>}/>\r\n                    <Route path = '/password/reset/confirm/:uid/:token' element={<ResetPasswordConfirm/>}/>\r\n                    <Route path = '/activate/:uid/:token' element={<Activate/>}/>\r\n                </Routes>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}